"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mqttClientWithDebug = mqttClientWithDebug;

var _debug3 = _interopRequireDefault(require("debug"));

var _util = _interopRequireDefault(require("util"));

var _symbols = require("./symbols");

var _contants = require("./contants");

var _debug$extend, _debug2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const _debug = (0, _debug3.default)('mqtt');

const debug = {
  message: _debug.extend('message'),
  payload: _debug.extend('payload'),
  error: _debug.extend('error'),
  extend: (_debug2 = _debug, _debug$extend = _debug2.extend, function extend(_argPlaceholder) {
    return _debug$extend.call(_debug2, _argPlaceholder);
  })
};

function MqttClientWithDebug(mqttClient) {
  this[_symbols.wrappedMqttClient] = mqttClient;
  this[_symbols.withDebug] = true;
  mqttClient.on('error', err => debug.error(err));

  for (const event of _contants.events) mqttClient.on(event, function () {
    var _arguments$, _arguments$2;

    const topic = ((_arguments$ = arguments[0]) === null || _arguments$ === void 0 ? void 0 : _arguments$.topic) || ((_arguments$2 = arguments[0]) === null || _arguments$2 === void 0 ? void 0 : _arguments$2.cmd) || arguments[0];
    debug.extend(event)(`${topic ? topic : ''}`);
    debug.payload.extend(event)(`${_util.default.inspect(arguments[0], {
      compact: true,
      breakLength: 160
    })}`);
  });

  for (const m of _contants.mappedMethods) this[m] = (...args) => mqttClient[m](...args);

  for (const m of _contants.mappedPromiseMethods) this[m] = (...args) => {
    _debug.extend(m)(args.filter(f => f !== undefined).filter(f => !(f instanceof Function)).map(f => _util.default.inspect(f, {
      compact: true
    })).join(' '));

    return mqttClient[m](...args);
  };
}

function mqttClientWithDebug(mqttClient) {
  if ((0, _symbols.alreadyWrapped)(mqttClient, _symbols.withDebug)) return mqttClient;
  return new MqttClientWithDebug(mqttClient);
}